1. Singleton class
    The singleton pattern is a pattern used in object-oriented programming which ensures that 
    a class has only one instance and also provides a global point of access to it. Sometimes it's important for a class to have exactly one instance,
    or you might force your app into a weird state. For example, you only want one instance of a class that represents your local storage,
    or you may end up with two different sources of data, which are out of sync. For the same reason, an operating system should have exactly one file system.
    
    
    Example
    
            class Singleton {
  static final Singleton _singleton = Singleton._internal();

  factory Singleton() {
    return _singleton;
  }

  Singleton._internal();
}
You can construct it like this

main() {
  var s1 = Singleton();
  var s2 = Singleton();
  print(identical(s1, s2));  // true
  print(s1 == s2);           // true
}
